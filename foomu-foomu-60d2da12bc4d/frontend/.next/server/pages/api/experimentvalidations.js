"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/experimentvalidations";
exports.ids = ["pages/api/experimentvalidations"];
exports.modules = {

/***/ "(api)/./pages/api/experimentvalidations.js":
/*!********************************************!*\
  !*** ./pages/api/experimentvalidations.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nasync function handler(req, res) {\n    if (req.method === \"POST\") {\n        // Get data from your request\n        const data = req.body;\n        try {\n            const response = await fetch(\"http://127.0.0.1:8000/api/experiment-validations/\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(data)\n            });\n            const responseData = await response.json();\n            if (!response.ok) {\n                // Handle error response\n                return res.status(response.status).json(responseData);\n            }\n            // Send a response\n            return res.status(201).json(responseData);\n        } catch (error) {\n            // Handle error during the request\n            return res.status(500).json({\n                error: \"An unexpected error occurred\"\n            });\n        }\n    } else if (req.method === \"GET\") {\n        const [experimentsResponse, validationsResponse, equipmentsResponse, qualitativeresultsResponse, quantitativeresultsResponse] = await Promise.all([\n            fetch(\"http://127.0.0.1:8000/api/experiments/\"),\n            fetch(\"http://127.0.0.1:8000/api/validations/\"),\n            fetch(\"http://127.0.0.1:8000/api/equipments/\"),\n            fetch(\"http://127.0.0.1:8000/api/qualitative-results/\"),\n            fetch(\"http://127.0.0.1:8000/api/quantitative-results/\")\n        ]);\n        const [experimentData, validationData, equipmentData, qualitativeresultData, quantitativeresultData] = await Promise.all([\n            experimentsResponse.json(),\n            validationsResponse.json(),\n            equipmentsResponse.json(),\n            qualitativeresultsResponse.json(),\n            quantitativeresultsResponse.json()\n        ]);\n        if (!experimentsResponse.ok || !validationsResponse.ok || !equipmentsResponse.ok || !qualitativeresultsResponse || !quantitativeresultsResponse) {\n            // Handle error response\n            return res.status(experimentsResponse.status || validationsResponse.status || equipmentsResponse.status || qualitativeresultsResponse || quantitativeresultsResponse).json({\n                error: \"Failed to fetch data\"\n            });\n        }\n        // Send a response\n        return res.status(200).json({\n            experiments: experimentData,\n            validations: validationData,\n            equipments: equipmentData,\n            qualitativeresults: qualitativeresultData,\n            quantitativeresults: quantitativeresultData\n        });\n    } else {\n        // Handle any other HTTP method\n        res.setHeader(\"Allow\", [\n            \"POST\",\n            \"GET\"\n        ]);\n        res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvZXhwZXJpbWVudHZhbGlkYXRpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZSxlQUFlQSxRQUFRQyxHQUFHLEVBQUVDLEdBQUc7SUFDMUMsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLFFBQVE7UUFDekIsNkJBQTZCO1FBQzdCLE1BQU1DLE9BQU9ILElBQUlJLElBQUk7UUFFckIsSUFBSTtZQUNGLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSxxREFBcUQ7Z0JBQ2hGSixRQUFRO2dCQUNSSyxTQUFTO29CQUNQLGdCQUFnQjtnQkFDbEI7Z0JBQ0FILE1BQU1JLEtBQUtDLFNBQVMsQ0FBQ047WUFDdkI7WUFFQSxNQUFNTyxlQUFlLE1BQU1MLFNBQVNNLElBQUk7WUFFeEMsSUFBSSxDQUFDTixTQUFTTyxFQUFFLEVBQUU7Z0JBQ2hCLHdCQUF3QjtnQkFDeEIsT0FBT1gsSUFBSVksTUFBTSxDQUFDUixTQUFTUSxNQUFNLEVBQUVGLElBQUksQ0FBQ0Q7WUFDMUM7WUFFQSxrQkFBa0I7WUFDbEIsT0FBT1QsSUFBSVksTUFBTSxDQUFDLEtBQUtGLElBQUksQ0FBQ0Q7UUFDOUIsRUFBRSxPQUFPSSxPQUFPO1lBQ2Qsa0NBQWtDO1lBQ2xDLE9BQU9iLElBQUlZLE1BQU0sQ0FBQyxLQUFLRixJQUFJLENBQUM7Z0JBQUVHLE9BQU87WUFBK0I7UUFDdEU7SUFDRixPQUFPLElBQUlkLElBQUlFLE1BQU0sS0FBSyxPQUFPO1FBQy9CLE1BQU0sQ0FBQ2EscUJBQXFCQyxxQkFBcUJDLG9CQUFvQkMsNEJBQTRCQyw0QkFBNEIsR0FBRyxNQUFNQyxRQUFRQyxHQUFHLENBQUM7WUFDaEpmLE1BQU07WUFDTkEsTUFBTTtZQUNOQSxNQUFNO1lBQ05BLE1BQU07WUFDTkEsTUFBTTtTQUNQO1FBRUQsTUFBTSxDQUFDZ0IsZ0JBQWdCQyxnQkFBZ0JDLGVBQWVDLHVCQUFzQkMsdUJBQXdCLEdBQUcsTUFBTU4sUUFBUUMsR0FBRyxDQUFDO1lBQ3ZITixvQkFBb0JKLElBQUk7WUFDeEJLLG9CQUFvQkwsSUFBSTtZQUN4Qk0sbUJBQW1CTixJQUFJO1lBQ3ZCTywyQkFBMkJQLElBQUk7WUFDL0JRLDRCQUE0QlIsSUFBSTtTQUVqQztRQUVELElBQUksQ0FBQ0ksb0JBQW9CSCxFQUFFLElBQUksQ0FBQ0ksb0JBQW9CSixFQUFFLElBQUksQ0FBQ0ssbUJBQW1CTCxFQUFFLElBQUksQ0FBQ00sOEJBQThCLENBQUNDLDZCQUE2QjtZQUMvSSx3QkFBd0I7WUFDeEIsT0FBT2xCLElBQ0pZLE1BQU0sQ0FBQ0Usb0JBQW9CRixNQUFNLElBQUlHLG9CQUFvQkgsTUFBTSxJQUFJSSxtQkFBbUJKLE1BQU0sSUFBSUssOEJBQThCQyw2QkFDOUhSLElBQUksQ0FBQztnQkFDSkcsT0FBTztZQUNUO1FBQ0o7UUFHQSxrQkFBa0I7UUFDbEIsT0FBT2IsSUFBSVksTUFBTSxDQUFDLEtBQUtGLElBQUksQ0FBQztZQUMxQmdCLGFBQWFMO1lBQ2JNLGFBQWFMO1lBQ2JNLFlBQVlMO1lBQ1pNLG9CQUFvQkw7WUFDcEJNLHFCQUFxQkw7UUFFdkI7SUFDRixPQUFPO1FBQ0wsK0JBQStCO1FBQy9CekIsSUFBSStCLFNBQVMsQ0FBQyxTQUFTO1lBQUM7WUFBUTtTQUFNO1FBQ3RDL0IsSUFBSVksTUFBTSxDQUFDLEtBQUtvQixHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUVqQyxJQUFJRSxNQUFNLENBQUMsWUFBWSxDQUFDO0lBQ3hEO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL3BhZ2VzL2FwaS9leHBlcmltZW50dmFsaWRhdGlvbnMuanM/MGVjNSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XHJcbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ1BPU1QnKSB7XHJcbiAgICAgIC8vIEdldCBkYXRhIGZyb20geW91ciByZXF1ZXN0XHJcbiAgICAgIGNvbnN0IGRhdGEgPSByZXEuYm9keTtcclxuICBcclxuICAgICAgdHJ5IHtcclxuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2V4cGVyaW1lbnQtdmFsaWRhdGlvbnMvJywge1xyXG4gICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXHJcbiAgICAgICAgICB9LFxyXG4gICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXHJcbiAgICAgICAgfSk7XHJcbiAgXHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2VEYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gIFxyXG4gICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAgIC8vIEhhbmRsZSBlcnJvciByZXNwb25zZVxyXG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMocmVzcG9uc2Uuc3RhdHVzKS5qc29uKHJlc3BvbnNlRGF0YSk7XHJcbiAgICAgICAgfVxyXG4gIFxyXG4gICAgICAgIC8vIFNlbmQgYSByZXNwb25zZVxyXG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMSkuanNvbihyZXNwb25zZURhdGEpO1xyXG4gICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgIC8vIEhhbmRsZSBlcnJvciBkdXJpbmcgdGhlIHJlcXVlc3RcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBlcnJvcjogJ0FuIHVuZXhwZWN0ZWQgZXJyb3Igb2NjdXJyZWQnIH0pO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2UgaWYgKHJlcS5tZXRob2QgPT09ICdHRVQnKSB7XHJcbiAgICAgIGNvbnN0IFtleHBlcmltZW50c1Jlc3BvbnNlLCB2YWxpZGF0aW9uc1Jlc3BvbnNlLCBlcXVpcG1lbnRzUmVzcG9uc2UsIHF1YWxpdGF0aXZlcmVzdWx0c1Jlc3BvbnNlLCBxdWFudGl0YXRpdmVyZXN1bHRzUmVzcG9uc2VdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xyXG4gICAgICAgIGZldGNoKCdodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2V4cGVyaW1lbnRzLycpLFxyXG4gICAgICAgIGZldGNoKCdodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3ZhbGlkYXRpb25zLycpLCAgXHJcbiAgICAgICAgZmV0Y2goJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMC9hcGkvZXF1aXBtZW50cy8nKSxcclxuICAgICAgICBmZXRjaCgnaHR0cDovLzEyNy4wLjAuMTo4MDAwL2FwaS9xdWFsaXRhdGl2ZS1yZXN1bHRzLycpLFxyXG4gICAgICAgIGZldGNoKCdodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3F1YW50aXRhdGl2ZS1yZXN1bHRzLycpLFxyXG4gICAgICBdKTtcclxuICBcclxuICAgICAgY29uc3QgW2V4cGVyaW1lbnREYXRhLCB2YWxpZGF0aW9uRGF0YSwgZXF1aXBtZW50RGF0YSwgcXVhbGl0YXRpdmVyZXN1bHREYXRhLHF1YW50aXRhdGl2ZXJlc3VsdERhdGEgXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcclxuICAgICAgICBleHBlcmltZW50c1Jlc3BvbnNlLmpzb24oKSxcclxuICAgICAgICB2YWxpZGF0aW9uc1Jlc3BvbnNlLmpzb24oKSxcclxuICAgICAgICBlcXVpcG1lbnRzUmVzcG9uc2UuanNvbigpLFxyXG4gICAgICAgIHF1YWxpdGF0aXZlcmVzdWx0c1Jlc3BvbnNlLmpzb24oKSxcclxuICAgICAgICBxdWFudGl0YXRpdmVyZXN1bHRzUmVzcG9uc2UuanNvbigpLFxyXG4gICAgICAgIFxyXG4gICAgICBdKTtcclxuICBcclxuICAgICAgaWYgKCFleHBlcmltZW50c1Jlc3BvbnNlLm9rIHx8ICF2YWxpZGF0aW9uc1Jlc3BvbnNlLm9rIHx8ICFlcXVpcG1lbnRzUmVzcG9uc2Uub2sgfHwgIXF1YWxpdGF0aXZlcmVzdWx0c1Jlc3BvbnNlIHx8ICFxdWFudGl0YXRpdmVyZXN1bHRzUmVzcG9uc2UpIHtcclxuICAgICAgICAvLyBIYW5kbGUgZXJyb3IgcmVzcG9uc2VcclxuICAgICAgICByZXR1cm4gcmVzXHJcbiAgICAgICAgICAuc3RhdHVzKGV4cGVyaW1lbnRzUmVzcG9uc2Uuc3RhdHVzIHx8IHZhbGlkYXRpb25zUmVzcG9uc2Uuc3RhdHVzIHx8IGVxdWlwbWVudHNSZXNwb25zZS5zdGF0dXMgfHwgcXVhbGl0YXRpdmVyZXN1bHRzUmVzcG9uc2UgfHwgcXVhbnRpdGF0aXZlcmVzdWx0c1Jlc3BvbnNlKVxyXG4gICAgICAgICAgLmpzb24oe1xyXG4gICAgICAgICAgICBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCBkYXRhJyxcclxuICAgICAgICAgIH0pO1xyXG4gICAgICB9XHJcbiAgICAgIFxyXG4gIFxyXG4gICAgICAvLyBTZW5kIGEgcmVzcG9uc2VcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcclxuICAgICAgICBleHBlcmltZW50czogZXhwZXJpbWVudERhdGEsXHJcbiAgICAgICAgdmFsaWRhdGlvbnM6IHZhbGlkYXRpb25EYXRhLFxyXG4gICAgICAgIGVxdWlwbWVudHM6IGVxdWlwbWVudERhdGEsXHJcbiAgICAgICAgcXVhbGl0YXRpdmVyZXN1bHRzOiBxdWFsaXRhdGl2ZXJlc3VsdERhdGEsXHJcbiAgICAgICAgcXVhbnRpdGF0aXZlcmVzdWx0czogcXVhbnRpdGF0aXZlcmVzdWx0RGF0YSxcclxuICAgICAgIFxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIC8vIEhhbmRsZSBhbnkgb3RoZXIgSFRUUCBtZXRob2RcclxuICAgICAgcmVzLnNldEhlYWRlcignQWxsb3cnLCBbJ1BPU1QnLCAnR0VUJ10pO1xyXG4gICAgICByZXMuc3RhdHVzKDQwNSkuZW5kKGBNZXRob2QgJHtyZXEubWV0aG9kfSBOb3QgQWxsb3dlZGApO1xyXG4gICAgfVxyXG4gIH1cclxuICAiXSwibmFtZXMiOlsiaGFuZGxlciIsInJlcSIsInJlcyIsIm1ldGhvZCIsImRhdGEiLCJib2R5IiwicmVzcG9uc2UiLCJmZXRjaCIsImhlYWRlcnMiLCJKU09OIiwic3RyaW5naWZ5IiwicmVzcG9uc2VEYXRhIiwianNvbiIsIm9rIiwic3RhdHVzIiwiZXJyb3IiLCJleHBlcmltZW50c1Jlc3BvbnNlIiwidmFsaWRhdGlvbnNSZXNwb25zZSIsImVxdWlwbWVudHNSZXNwb25zZSIsInF1YWxpdGF0aXZlcmVzdWx0c1Jlc3BvbnNlIiwicXVhbnRpdGF0aXZlcmVzdWx0c1Jlc3BvbnNlIiwiUHJvbWlzZSIsImFsbCIsImV4cGVyaW1lbnREYXRhIiwidmFsaWRhdGlvbkRhdGEiLCJlcXVpcG1lbnREYXRhIiwicXVhbGl0YXRpdmVyZXN1bHREYXRhIiwicXVhbnRpdGF0aXZlcmVzdWx0RGF0YSIsImV4cGVyaW1lbnRzIiwidmFsaWRhdGlvbnMiLCJlcXVpcG1lbnRzIiwicXVhbGl0YXRpdmVyZXN1bHRzIiwicXVhbnRpdGF0aXZlcmVzdWx0cyIsInNldEhlYWRlciIsImVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/experimentvalidations.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/experimentvalidations.js"));
module.exports = __webpack_exports__;

})();