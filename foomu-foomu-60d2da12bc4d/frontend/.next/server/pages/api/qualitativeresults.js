"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/qualitativeresults";
exports.ids = ["pages/api/qualitativeresults"];
exports.modules = {

/***/ "(api)/./pages/api/qualitativeresults.js":
/*!*****************************************!*\
  !*** ./pages/api/qualitativeresults.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nasync function handler(req, res) {\n    if (req.method === \"POST\") {\n        // Get data from your request\n        const data = req.body;\n        // Perform your data operations here, for example, call Django backend\n        const response = await fetch(\"http://127.0.0.1:8000/api/qualitative-results/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        const responseData = await response.json();\n        if (!response.ok) {\n            // Handle error response\n            return res.status(response.status).json(responseData);\n        }\n    } else if (req.method === \"GET\") {\n        const experimentsResponse = await fetch(\"http://127.0.0.1:8000/api/experiments/\");\n        const qualitativeTypesResponse = await fetch(\"http://127.0.0.1:8000/api/qualitative-types/\");\n        const experimentData = await experimentsResponse.json();\n        const qualitativeTypeData = await qualitativeTypesResponse.json();\n        if (!experimentsResponse.ok || !qualitativeTypesResponse.ok) {\n            // Handle error response\n            return res.status(experimentsResponse.status || qualitativeTypesResponse.status).json({\n                experiments: experimentData,\n                qualitativeTypes: qualitativeTypeData\n            });\n        }\n        // Send a response\n        return res.status(200).json({\n            experiments: experimentData,\n            qualitativeTypes: qualitativeTypeData\n        });\n    } else {\n        // Handle any other HTTP method\n        res.setHeader(\"Allow\", [\n            \"POST\",\n            \"GET\"\n        ]);\n        res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvcXVhbGl0YXRpdmVyZXN1bHRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZSxlQUFlQSxRQUFRQyxHQUFHLEVBQUVDLEdBQUc7SUFDMUMsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLFFBQVE7UUFDekIsNkJBQTZCO1FBQzdCLE1BQU1DLE9BQU9ILElBQUlJLElBQUk7UUFFckIsc0VBQXNFO1FBQ3RFLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSxrREFBa0Q7WUFDN0VKLFFBQVE7WUFDUkssU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7WUFDQUgsTUFBTUksS0FBS0MsU0FBUyxDQUFDTjtRQUN2QjtRQUVBLE1BQU1PLGVBQWUsTUFBTUwsU0FBU00sSUFBSTtRQUV4QyxJQUFJLENBQUNOLFNBQVNPLEVBQUUsRUFBRTtZQUNoQix3QkFBd0I7WUFDeEIsT0FBT1gsSUFBSVksTUFBTSxDQUFDUixTQUFTUSxNQUFNLEVBQUVGLElBQUksQ0FBQ0Q7UUFDMUM7SUFDRixPQUFPLElBQUlWLElBQUlFLE1BQU0sS0FBSyxPQUFPO1FBQy9CLE1BQU1ZLHNCQUFzQixNQUFNUixNQUFNO1FBQ3hDLE1BQU1TLDJCQUEyQixNQUFNVCxNQUFNO1FBRTdDLE1BQU1VLGlCQUFpQixNQUFNRixvQkFBb0JILElBQUk7UUFDckQsTUFBTU0sc0JBQXNCLE1BQU1GLHlCQUF5QkosSUFBSTtRQUUvRCxJQUFJLENBQUNHLG9CQUFvQkYsRUFBRSxJQUFJLENBQUNHLHlCQUF5QkgsRUFBRSxFQUFFO1lBQzNELHdCQUF3QjtZQUN4QixPQUFPWCxJQUFJWSxNQUFNLENBQUNDLG9CQUFvQkQsTUFBTSxJQUFJRSx5QkFBeUJGLE1BQU0sRUFBRUYsSUFBSSxDQUFDO2dCQUNwRk8sYUFBYUY7Z0JBQ2JHLGtCQUFrQkY7WUFDcEI7UUFDRjtRQUVBLGtCQUFrQjtRQUNsQixPQUFPaEIsSUFBSVksTUFBTSxDQUFDLEtBQUtGLElBQUksQ0FBQztZQUMxQk8sYUFBYUY7WUFDYkcsa0JBQWtCRjtRQUNwQjtJQUNGLE9BQU87UUFDTCwrQkFBK0I7UUFDL0JoQixJQUFJbUIsU0FBUyxDQUFDLFNBQVM7WUFBQztZQUFRO1NBQU07UUFDdENuQixJQUFJWSxNQUFNLENBQUMsS0FBS1EsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFckIsSUFBSUUsTUFBTSxDQUFDLFlBQVksQ0FBQztJQUN4RDtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi9wYWdlcy9hcGkvcXVhbGl0YXRpdmVyZXN1bHRzLmpzPzU5YTQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xyXG4gICAgaWYgKHJlcS5tZXRob2QgPT09ICdQT1NUJykge1xyXG4gICAgICAvLyBHZXQgZGF0YSBmcm9tIHlvdXIgcmVxdWVzdFxyXG4gICAgICBjb25zdCBkYXRhID0gcmVxLmJvZHk7XHJcbiAgXHJcbiAgICAgIC8vIFBlcmZvcm0geW91ciBkYXRhIG9wZXJhdGlvbnMgaGVyZSwgZm9yIGV4YW1wbGUsIGNhbGwgRGphbmdvIGJhY2tlbmRcclxuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaCgnaHR0cDovLzEyNy4wLjAuMTo4MDAwL2FwaS9xdWFsaXRhdGl2ZS1yZXN1bHRzLycsIHtcclxuICAgICAgICBtZXRob2Q6ICdQT1NUJyxcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXHJcbiAgICAgIH0pO1xyXG4gIFxyXG4gICAgICBjb25zdCByZXNwb25zZURhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcbiAgXHJcbiAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcclxuICAgICAgICAvLyBIYW5kbGUgZXJyb3IgcmVzcG9uc2VcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyhyZXNwb25zZS5zdGF0dXMpLmpzb24ocmVzcG9uc2VEYXRhKTtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGlmIChyZXEubWV0aG9kID09PSAnR0VUJykge1xyXG4gICAgICBjb25zdCBleHBlcmltZW50c1Jlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMC9hcGkvZXhwZXJpbWVudHMvJyk7XHJcbiAgICAgIGNvbnN0IHF1YWxpdGF0aXZlVHlwZXNSZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL3F1YWxpdGF0aXZlLXR5cGVzLycpO1xyXG4gIFxyXG4gICAgICBjb25zdCBleHBlcmltZW50RGF0YSA9IGF3YWl0IGV4cGVyaW1lbnRzUmVzcG9uc2UuanNvbigpO1xyXG4gICAgICBjb25zdCBxdWFsaXRhdGl2ZVR5cGVEYXRhID0gYXdhaXQgcXVhbGl0YXRpdmVUeXBlc1Jlc3BvbnNlLmpzb24oKTtcclxuICBcclxuICAgICAgaWYgKCFleHBlcmltZW50c1Jlc3BvbnNlLm9rIHx8ICFxdWFsaXRhdGl2ZVR5cGVzUmVzcG9uc2Uub2spIHtcclxuICAgICAgICAvLyBIYW5kbGUgZXJyb3IgcmVzcG9uc2VcclxuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyhleHBlcmltZW50c1Jlc3BvbnNlLnN0YXR1cyB8fCBxdWFsaXRhdGl2ZVR5cGVzUmVzcG9uc2Uuc3RhdHVzKS5qc29uKHtcclxuICAgICAgICAgIGV4cGVyaW1lbnRzOiBleHBlcmltZW50RGF0YSxcclxuICAgICAgICAgIHF1YWxpdGF0aXZlVHlwZXM6IHF1YWxpdGF0aXZlVHlwZURhdGEsXHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgLy8gU2VuZCBhIHJlc3BvbnNlXHJcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgICAgZXhwZXJpbWVudHM6IGV4cGVyaW1lbnREYXRhLFxyXG4gICAgICAgIHF1YWxpdGF0aXZlVHlwZXM6IHF1YWxpdGF0aXZlVHlwZURhdGEsXHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgLy8gSGFuZGxlIGFueSBvdGhlciBIVFRQIG1ldGhvZFxyXG4gICAgICByZXMuc2V0SGVhZGVyKCdBbGxvdycsIFsnUE9TVCcsICdHRVQnXSk7XHJcbiAgICAgIHJlcy5zdGF0dXMoNDA1KS5lbmQoYE1ldGhvZCAke3JlcS5tZXRob2R9IE5vdCBBbGxvd2VkYCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gICJdLCJuYW1lcyI6WyJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwiZGF0YSIsImJvZHkiLCJyZXNwb25zZSIsImZldGNoIiwiaGVhZGVycyIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXNwb25zZURhdGEiLCJqc29uIiwib2siLCJzdGF0dXMiLCJleHBlcmltZW50c1Jlc3BvbnNlIiwicXVhbGl0YXRpdmVUeXBlc1Jlc3BvbnNlIiwiZXhwZXJpbWVudERhdGEiLCJxdWFsaXRhdGl2ZVR5cGVEYXRhIiwiZXhwZXJpbWVudHMiLCJxdWFsaXRhdGl2ZVR5cGVzIiwic2V0SGVhZGVyIiwiZW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/qualitativeresults.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/qualitativeresults.js"));
module.exports = __webpack_exports__;

})();