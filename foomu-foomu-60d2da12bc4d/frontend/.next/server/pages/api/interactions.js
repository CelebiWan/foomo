"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/interactions";
exports.ids = ["pages/api/interactions"];
exports.modules = {

/***/ "(api)/./pages/api/interactions.js":
/*!***********************************!*\
  !*** ./pages/api/interactions.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nasync function handler(req, res) {\n    if (req.method === \"POST\") {\n        // Get data from your request\n        const data = req.body;\n        // Perform your data operations here, for example, call Django backend\n        const response = await fetch(\"http://127.0.0.1:8000/api/interactions/\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(data)\n        });\n        const responseData = await response.json();\n        if (!response.ok) {\n            // Handle error response\n            return res.status(response.status).json(responseData);\n        }\n        // Send a response\n        return res.status(201).json(responseData);\n    } else if (req.method === \"GET\") {\n        const [interactionResponse, interactionTypeResponse] = await Promise.all([\n            fetch(\"http://127.0.0.1:8000/api/ingredients/\"),\n            fetch(\"http://127.0.0.1:8000/api/interaction-types/\")\n        ]);\n        const [interactionData, interactionTypeData] = await Promise.all([\n            interactionResponse.json(),\n            interactionTypeResponse.json()\n        ]);\n        if (!interactionResponse.ok || !interactionTypeResponse.ok) {\n            // Handle error response\n            return res.status(interactionResponse.status || interactionTypeResponse.status).json({\n                error: \"Failed to fetch data\"\n            });\n        }\n        // Send a response\n        return res.status(200).json({\n            interactions: interactionData,\n            interactionTypes: interactionTypeData\n        });\n    } else {\n        // Handle any other HTTP method\n        res.setHeader(\"Allow\", [\n            \"POST\",\n            \"GET\"\n        ]);\n        res.status(405).end(`Method ${req.method} Not Allowed`);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvaW50ZXJhY3Rpb25zLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZSxlQUFlQSxRQUFRQyxHQUFHLEVBQUVDLEdBQUc7SUFDNUMsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLFFBQVE7UUFDekIsNkJBQTZCO1FBQzdCLE1BQU1DLE9BQU9ILElBQUlJLElBQUk7UUFFckIsc0VBQXNFO1FBQ3RFLE1BQU1DLFdBQVcsTUFBTUMsTUFBTSwyQ0FBMkM7WUFDdEVKLFFBQVE7WUFDUkssU0FBUztnQkFDUCxnQkFBZ0I7WUFDbEI7WUFDQUgsTUFBTUksS0FBS0MsU0FBUyxDQUFDTjtRQUN2QjtRQUVBLE1BQU1PLGVBQWUsTUFBTUwsU0FBU00sSUFBSTtRQUV4QyxJQUFJLENBQUNOLFNBQVNPLEVBQUUsRUFBRTtZQUNoQix3QkFBd0I7WUFDeEIsT0FBT1gsSUFBSVksTUFBTSxDQUFDUixTQUFTUSxNQUFNLEVBQUVGLElBQUksQ0FBQ0Q7UUFDMUM7UUFFQSxrQkFBa0I7UUFDbEIsT0FBT1QsSUFBSVksTUFBTSxDQUFDLEtBQUtGLElBQUksQ0FBQ0Q7SUFDOUIsT0FBTyxJQUFJVixJQUFJRSxNQUFNLEtBQUssT0FBTztRQUMvQixNQUFNLENBQUNZLHFCQUFxQkMsd0JBQXdCLEdBQUcsTUFBTUMsUUFBUUMsR0FBRyxDQUFDO1lBQ3ZFWCxNQUFNO1lBQ05BLE1BQU07U0FDUDtRQUVELE1BQU0sQ0FBQ1ksaUJBQWlCQyxvQkFBb0IsR0FBRyxNQUFNSCxRQUFRQyxHQUFHLENBQUM7WUFDL0RILG9CQUFvQkgsSUFBSTtZQUN4Qkksd0JBQXdCSixJQUFJO1NBQzdCO1FBRUQsSUFBSSxDQUFDRyxvQkFBb0JGLEVBQUUsSUFBSSxDQUFDRyx3QkFBd0JILEVBQUUsRUFBRTtZQUMxRCx3QkFBd0I7WUFDeEIsT0FBT1gsSUFDSlksTUFBTSxDQUFDQyxvQkFBb0JELE1BQU0sSUFBSUUsd0JBQXdCRixNQUFNLEVBQ25FRixJQUFJLENBQUM7Z0JBQ0pTLE9BQU87WUFDVDtRQUNKO1FBRUEsa0JBQWtCO1FBQ2xCLE9BQU9uQixJQUFJWSxNQUFNLENBQUMsS0FBS0YsSUFBSSxDQUFDO1lBQzFCVSxjQUFjSDtZQUNkSSxrQkFBa0JIO1FBQ3BCO0lBQ0YsT0FBTztRQUNMLCtCQUErQjtRQUMvQmxCLElBQUlzQixTQUFTLENBQUMsU0FBUztZQUFDO1lBQVE7U0FBTTtRQUN0Q3RCLElBQUlZLE1BQU0sQ0FBQyxLQUFLVyxHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUV4QixJQUFJRSxNQUFNLENBQUMsWUFBWSxDQUFDO0lBQ3hEO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uL3BhZ2VzL2FwaS9pbnRlcmFjdGlvbnMuanM/ZDFkNiJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcSwgcmVzKSB7XHJcbiAgaWYgKHJlcS5tZXRob2QgPT09ICdQT1NUJykge1xyXG4gICAgLy8gR2V0IGRhdGEgZnJvbSB5b3VyIHJlcXVlc3RcclxuICAgIGNvbnN0IGRhdGEgPSByZXEuYm9keTtcclxuXHJcbiAgICAvLyBQZXJmb3JtIHlvdXIgZGF0YSBvcGVyYXRpb25zIGhlcmUsIGZvciBleGFtcGxlLCBjYWxsIERqYW5nbyBiYWNrZW5kXHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwOi8vMTI3LjAuMC4xOjgwMDAvYXBpL2ludGVyYWN0aW9ucy8nLCB7XHJcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXHJcbiAgICB9KTtcclxuXHJcbiAgICBjb25zdCByZXNwb25zZURhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XHJcblxyXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xyXG4gICAgICAvLyBIYW5kbGUgZXJyb3IgcmVzcG9uc2VcclxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMocmVzcG9uc2Uuc3RhdHVzKS5qc29uKHJlc3BvbnNlRGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gU2VuZCBhIHJlc3BvbnNlXHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmpzb24ocmVzcG9uc2VEYXRhKTtcclxuICB9IGVsc2UgaWYgKHJlcS5tZXRob2QgPT09ICdHRVQnKSB7XHJcbiAgICBjb25zdCBbaW50ZXJhY3Rpb25SZXNwb25zZSwgaW50ZXJhY3Rpb25UeXBlUmVzcG9uc2VdID0gYXdhaXQgUHJvbWlzZS5hbGwoW1xyXG4gICAgICBmZXRjaCgnaHR0cDovLzEyNy4wLjAuMTo4MDAwL2FwaS9pbmdyZWRpZW50cy8nKSxcclxuICAgICAgZmV0Y2goJ2h0dHA6Ly8xMjcuMC4wLjE6ODAwMC9hcGkvaW50ZXJhY3Rpb24tdHlwZXMvJyksXHJcbiAgICBdKTtcclxuXHJcbiAgICBjb25zdCBbaW50ZXJhY3Rpb25EYXRhLCBpbnRlcmFjdGlvblR5cGVEYXRhXSA9IGF3YWl0IFByb21pc2UuYWxsKFtcclxuICAgICAgaW50ZXJhY3Rpb25SZXNwb25zZS5qc29uKCksXHJcbiAgICAgIGludGVyYWN0aW9uVHlwZVJlc3BvbnNlLmpzb24oKSxcclxuICAgIF0pO1xyXG5cclxuICAgIGlmICghaW50ZXJhY3Rpb25SZXNwb25zZS5vayB8fCAhaW50ZXJhY3Rpb25UeXBlUmVzcG9uc2Uub2spIHtcclxuICAgICAgLy8gSGFuZGxlIGVycm9yIHJlc3BvbnNlXHJcbiAgICAgIHJldHVybiByZXNcclxuICAgICAgICAuc3RhdHVzKGludGVyYWN0aW9uUmVzcG9uc2Uuc3RhdHVzIHx8IGludGVyYWN0aW9uVHlwZVJlc3BvbnNlLnN0YXR1cylcclxuICAgICAgICAuanNvbih7XHJcbiAgICAgICAgICBlcnJvcjogJ0ZhaWxlZCB0byBmZXRjaCBkYXRhJyxcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBTZW5kIGEgcmVzcG9uc2VcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XHJcbiAgICAgIGludGVyYWN0aW9uczogaW50ZXJhY3Rpb25EYXRhLFxyXG4gICAgICBpbnRlcmFjdGlvblR5cGVzOiBpbnRlcmFjdGlvblR5cGVEYXRhLFxyXG4gICAgfSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIC8vIEhhbmRsZSBhbnkgb3RoZXIgSFRUUCBtZXRob2RcclxuICAgIHJlcy5zZXRIZWFkZXIoJ0FsbG93JywgWydQT1NUJywgJ0dFVCddKTtcclxuICAgIHJlcy5zdGF0dXMoNDA1KS5lbmQoYE1ldGhvZCAke3JlcS5tZXRob2R9IE5vdCBBbGxvd2VkYCk7XHJcbiAgfVxyXG59XHJcbiJdLCJuYW1lcyI6WyJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwiZGF0YSIsImJvZHkiLCJyZXNwb25zZSIsImZldGNoIiwiaGVhZGVycyIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZXNwb25zZURhdGEiLCJqc29uIiwib2siLCJzdGF0dXMiLCJpbnRlcmFjdGlvblJlc3BvbnNlIiwiaW50ZXJhY3Rpb25UeXBlUmVzcG9uc2UiLCJQcm9taXNlIiwiYWxsIiwiaW50ZXJhY3Rpb25EYXRhIiwiaW50ZXJhY3Rpb25UeXBlRGF0YSIsImVycm9yIiwiaW50ZXJhY3Rpb25zIiwiaW50ZXJhY3Rpb25UeXBlcyIsInNldEhlYWRlciIsImVuZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/interactions.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/interactions.js"));
module.exports = __webpack_exports__;

})();